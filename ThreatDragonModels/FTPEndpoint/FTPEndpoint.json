{
  "summary": {
    "title": "FTPEndpoint",
    "description": ""
  },
  "detail": {
    "contributors": [],
    "diagrams": [
      {
        "title": "DDF-FTPEndpoint",
        "thumbnail": "./public/content/images/thumbnail.jpg",
        "id": 0,
        "diagramJson": {
          "cells": [
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 79,
                "y": 68
              },
              "angle": 0,
              "id": "f95cbdcd-9c94-449b-9ed3-cdbf5eeb5bd5",
              "z": 1,
              "hasOpenThreats": false,
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "DDF Catalog"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 276,
                "y": 69
              },
              "angle": 0,
              "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133",
              "z": 2,
              "hasOpenThreats": false,
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "FTP Endpoint"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "f95cbdcd-9c94-449b-9ed3-cdbf5eeb5bd5"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 228,
                  "y": 90
                }
              ],
              "id": "11152ff2-5f65-4220-827c-f1a84967f712",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "Response",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 3,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "DDF Catalog Process Memory Tampered",
                  "type": "Tampering",
                  "description": "If DDF Catalog is given access to memory, such as shared memory or pointers, or is given the ability to control what FTP Endpoint executes (for example, passing back a function pointer.), then DDF Catalog can tamper with FTP Endpoint. Consider if the function could work with less access to memory, such as passing data rather than pointers. Copy in data provided, and then validate it.",
                  "mitigation": "Java"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of DDF Catalog in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "target": {
                "id": "f95cbdcd-9c94-449b-9ed3-cdbf5eeb5bd5"
              },
              "vertices": [
                {
                  "x": 221,
                  "y": 133
                }
              ],
              "id": "37734f83-8a1f-48ad-be8e-0d990c45581a",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "Requests",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 4,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "DDF Catalog may be able to impersonate the context of FTP Endpoint in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Actor",
              "size": {
                "width": 160,
                "height": 80
              },
              "position": {
                "x": 664,
                "y": 73
              },
              "angle": 0,
              "id": "febd630f-7cae-42a7-b209-5479d2061c73",
              "z": 5,
              "hasOpenThreats": false,
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "FTP Client"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 588,
                  "y": 45
                },
                {
                  "x": 462,
                  "y": 43
                }
              ],
              "id": "dac60e55-c32a-4aad-ab3b-9387b491801e",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "User login",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 6,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across User Login may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across User Login may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way.",
                  "type": "Elevation of privilege"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI.",
                  "type": "Spoofing"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 504,
                  "y": 87
                }
              ],
              "id": "95eee6a2-aa95-49f6-b7bd-2a0f5b4a29df",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "RNTO",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 7,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorizead access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across RNTO may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across RNTO may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "type": "Elevation of privilege",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 587,
                  "y": 307
                },
                {
                  "x": 476,
                  "y": 310
                }
              ],
              "id": "b9e33aa5-d3e6-4c53-90a2-fece5754dff3",
              "labels": [
                {
                  "position": {
                    "distance": 0.5399325822871551,
                    "offset": 5.576234630309045
                  },
                  "attrs": {
                    "text": {
                      "text": "FTP Response/Reply",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 8,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing of the FTP Client External Destination Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to data being sent to the attacker's target instead of FTP Client. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "External Entity FTP Client Potentially Denies Receiving Data",
                  "type": "Repudiation",
                  "description": "FTP Client claims that it did not receive data from a process on the other side of the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 533,
                  "y": 307
                }
              ],
              "id": "dfb09268-7457-4e03-a30f-83c26968b95e",
              "labels": [
                {
                  "position": {
                    "distance": 0.552154567435731,
                    "offset": 2.0296225734055042
                  },
                  "attrs": {
                    "text": {
                      "text": "STOU",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 9,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across STOU may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across STOU may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 526,
                  "y": 280
                }
              ],
              "id": "96ea20cf-71c2-4eed-9f84-1acf026cc804",
              "labels": [
                {
                  "position": {
                    "distance": 0.5424965782345702,
                    "offset": 1.7905885120853782
                  },
                  "attrs": {
                    "text": {
                      "text": "SITE",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 10,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across SITE may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across SITE may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 523,
                  "y": 253
                }
              ],
              "id": "81429b03-8452-4db7-b1c6-b87458b590b5",
              "labels": [
                {
                  "position": {
                    "distance": 0.5244843940272861,
                    "offset": 1.9645063295029104
                  },
                  "attrs": {
                    "text": {
                      "text": "APPE",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 11,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across APPE may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "type": "Repudiation",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across APPE may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 525,
                  "y": 224
                }
              ],
              "id": "29bfb0df-a194-4699-9668-94059be6ebff",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "RMD",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 12,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across RMD may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across RMD may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 519,
                  "y": 197
                }
              ],
              "id": "8048ab7f-d83f-430f-a928-cff14e30860c",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "MKD",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 13,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across MKD may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across MKD may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "type": "Elevation of privilege",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 521,
                  "y": 169
                }
              ],
              "id": "121535fa-e54d-40e2-8920-52662b90bad8",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "MPUT",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 14,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across MPUT may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across MPUT may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [
                {
                  "x": 522,
                  "y": 146
                }
              ],
              "id": "4e982ad7-ffc8-45a8-910d-b79c9da02242",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "PUT",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 15,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across PUT may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across PUT may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "type": "Denial of service",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP",
                  "type": "Elevation of privilege"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "febd630f-7cae-42a7-b209-5479d2061c73"
              },
              "target": {
                "id": "a71559a7-18ad-411d-afe1-4d0ce77bb133"
              },
              "vertices": [],
              "id": "af4488fa-4759-46d9-8332-1a3d76a19a1d",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "RETR",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 16,
              "hasOpenThreats": false,
              "threats": [
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Endpoint Process",
                  "type": "Spoofing",
                  "description": "FTP Endpoint may be spoofed by an attacker and this may lead to information disclosure by FTP Client. Consider using a standard authentication mechanism to identify the destination process.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Spoofing the FTP Client External Entity",
                  "type": "Spoofing",
                  "description": "FTP Client may be spoofed by an attacker and this may lead to unauthorized access to FTP Endpoint. Consider using a standard authentication mechanism to identify the external entity.",
                  "mitigation": "FTP Endpoint requires standard authentication mechanisms: username/password or PKI."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Lack of Input Validation for FTP Endpoint",
                  "type": "Tampering",
                  "description": "Data flowing across RETR may be tampered with by an attacker. This may lead to a denial of service attack against FTP Endpoint or an elevation of privilege attack against FTP Endpoint or an information disclosure by FTP Endpoint. Failure to verify that input is as expected is a root cause of a very large number of exploitable issues. Consider all paths and the way they handle data. Verify that all input is verified for correctness using an approved list input validation approach.",
                  "mitigation": "All input is validated by the Catalog Framework"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Data Repudiation by FTP Endpoint",
                  "type": "Repudiation",
                  "description": "FTP Endpoint claims that it did not receive data from a source outside the trust boundary. Consider using logging or auditing to record the source, time, and summary of the received data.",
                  "mitigation": "All catalog operations are audited. All connections are audited."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Sniffing",
                  "type": "Information disclosure",
                  "description": "Data flowing across RETR may be sniffed by an attacker. Depending on what type of data an attacker can read, it may be used to attack other parts of the system or simply be a disclosure of information leading to compliance violations. Consider encrypting the data flow.",
                  "mitigation": "TLS"
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Potential Process Crash or Stop for FTP Endpoint",
                  "type": "Denial of service",
                  "description": "FTP Endpoint crashes, halts, stops or runs slowly; in all cases violating an availability metric.",
                  "mitigation": "FTP Endpoint is not a process, it is a service that runs in a container that manages services."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Data Flow Generic Data Flow Is Potentially Interrupted",
                  "type": "Denial of service",
                  "description": "An external agent interrupts data flowing across a trust boundary in either direction.",
                  "mitigation": "DDF is a software system and not responsible for the network."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation Using Impersonation",
                  "type": "Elevation of privilege",
                  "description": "FTP Endpoint may be able to impersonate the context of FTP Client in order to gain additional privilege.",
                  "mitigation": "FTP Endpoint only executes operations as the user attempting the FTP operation and is not capable of taking action on its own."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "FTP Endpoint May be Subject to Elevation of Privilege Using Remote Code Execution",
                  "type": "Elevation of privilege",
                  "description": "FTP Client may be able to remotely execute code for FTP Endpoint.",
                  "mitigation": "Only operations allowed by the FTP protocol are used."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Elevation by Changing the Execution Flow in FTP Endpoint",
                  "type": "Elevation of privilege",
                  "description": "An attacker may pass data into FTP Endpoint in order to change the flow of program execution within FTP Endpoint to the attacker's choosing.",
                  "mitigation": "FTP endpoint does not change execution based on the type of data passed in, everything is handled the same way."
                },
                {
                  "status": "Mitigated",
                  "severity": "High",
                  "title": "Cross Site Request Forgery",
                  "type": "Elevation of privilege",
                  "description": "Cross-site request forgery (CSRF or XSRF) is a type of attack in which an attacker forces a user's browser to make a forged request to a vulnerable site by exploiting an existing trust relationship between the browser and the vulnerable web site.  In a simple scenario, a user is logged in to web site A using a cookie as a credential.  The other browses to web site B.  Web site B returns a page with a hidden form that posts to web site A.  Since the browser will carry the user's cookie to web site A, web site B now can take any action on web site A, for example, adding an admin to an account.  The attack can be used to exploit any requests that the browser automatically authenticates, e.g. by session cookie, integrated authentication, IP whitelisting, …  The attack can be carried out in many ways such as by luring the victim to a site under control of the attacker, getting the user to click a link in a phishing email, or hacking a reputable web site that the victim will visit. The issue can only be resolved on the server side by requiring that all authenticated state-changing requests include an additional piece of secret payload (canary or CSRF token) which is known only to the legitimate web site and the browser and which is protected in transit through SSL/TLS. See the Forgery Protection property on the flow stencil for a list of mitigations.",
                  "mitigation": "FTP"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasNoOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 392,
                "y": 19
              },
              "target": {
                "x": 388,
                "y": 236
              },
              "vertices": [
                {
                  "x": 424,
                  "y": 130
                }
              ],
              "id": "2021a42a-e999-41dc-b6d8-c6ffd2438b8d",
              "z": 17,
              "attrs": {}
            }
          ]
        },
        "size": {
          "height": 590,
          "width": 971
        }
      }
    ]
  }
}